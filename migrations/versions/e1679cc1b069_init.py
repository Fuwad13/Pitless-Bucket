"""init

Revision ID: e1679cc1b069
Revises: 
Create Date: 2025-02-06 02:27:35.169369

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e1679cc1b069'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('file_info',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('extension', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('size', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('google_drive',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('creds', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('used_space', sa.BIGINT(), nullable=True),
    sa.Column('available_space', sa.BIGINT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_google_drive_email'), 'google_drive', ['email'], unique=True)
    op.create_table('file_chunk',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.Uuid(), nullable=False),
    sa.Column('chunk_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('chunk_number', sa.Integer(), nullable=False),
    sa.Column('drive_file_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('drive_account', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('size', sa.BIGINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file_info.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_file_chunk_file_id'), 'file_chunk', ['file_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_file_chunk_file_id'), table_name='file_chunk')
    op.drop_table('file_chunk')
    op.drop_index(op.f('ix_google_drive_email'), table_name='google_drive')
    op.drop_table('google_drive')
    op.drop_table('file_info')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
